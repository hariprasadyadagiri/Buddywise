name: CI/CD Pipeline for Azure AKS

on:
  push:
    branches:
      - main  # Run the pipeline on pushes to main branch

jobs:
  build-and-push:
    name: Build & Push Docker Image to ACR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Log in to Azure Container Registry
        run: |
          az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
          az acr login --name ${{ secrets.ACR_NAME }}

      - name: Build & Push Docker Image
        run: |
          docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/todo-app:latest .
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/todo-app:latest

  terraform-deploy:
    name: Deploy Infrastructure using Terraform
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.6  # Use latest stable version

      - name: Terraform Init
        run: |
          terraform init

      - name: Terraform Plan
        run: |
          terraform plan -out=tfplan
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve tfplan
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  deploy-to-aks:
    name: Deploy App to AKS
    runs-on: ubuntu-latest
    needs: terraform-deploy

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Kubernetes (kubectl)
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Login to Azure and Get AKS Credentials
        run: |
          az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
          az aks get-credentials --resource-group todo-app-rg --name my-aks-cluster

      - name: Deploy Application to AKS
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
